name: Major Tags
author: '@sayyid5416'
description: This action adds/updates the major tags for any repository according to its minor tags
branding:
  icon: tag
  color: yellow



runs:
  using: 'composite'
  steps:

    # - name: Data collection & Checks
    #   id: data
    #   shell: bash
    #   run: python "src/script.py"

    - name: Data collection & Checks (woorkaround)
      id: data
      shell: python
      run: |
        import os

        def env(name:str):
            return os.environ.get(name, '')

        # Collect data
        refName = env('GITHUB_REF_NAME')                                                    # [tag-version, branch-name, PR name, .....]
        refType = env('GITHUB_REF_TYPE')                                                    # [tag, branch, PR, ....]

        # Checks
        errorTitle, errorMsg = '', ''
        if refType != 'tag': 
            errorTitle = 'Unsupported Type'
            errorMsg = f'\\"{refType}\\" type is not supported. Run for tags only.'

        # Show error
        if errorTitle: errorTitle = f' title={errorTitle}'
        if errorMsg:
            os.system(f'echo "::error{errorTitle}::{errorMsg}"')
            exit(1)

        # Parsing
        majorTag = refName.split('.', 1)[0]                                                 # Tag name like v1, v2 etc

        # Set output
        os.system(f'echo "REF_NAME={refName}" >> $GITHUB_OUTPUT')
        os.system(f'echo "MAJOR_VER={majorTag}" >> $GITHUB_OUTPUT')
    
    - name: Show tags
      shell: bash
      run: |
        echo "Tags:"
        echo "- Current version tag: ${{ steps.data.outputs.REF_NAME }}"
        echo "- Major version tag: ${{ steps.data.outputs.MAJOR_VER }}"
    
    - name: Update the ${{ steps.data.outputs.MAJOR_VER }} tag
      id: update
      shell: bash
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git tag -fa "${{ steps.data.outputs.MAJOR_VER }}" "${{ steps.data.outputs.REF_NAME }}^{commit}" -m "Update ${{ steps.data.outputs.MAJOR_VER }} tag"
        git push origin ${{ steps.data.outputs.MAJOR_VER }} --force
        echo "updated=true" >> $GITHUB_OUTPUT
    
    - name: Show Summary
      if: success() || steps.update.conclusion == 'failure'
      shell: bash
      run: |
        echo "### Major tag \"${{ steps.data.outputs.MAJOR_VER }}\" updated to \"${{ steps.data.outputs.REF_NAME }}\" : ${{ steps.update.outputs.updated == 'true' }}" >> $GITHUB_STEP_SUMMARY
        
